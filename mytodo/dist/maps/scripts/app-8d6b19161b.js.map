{"version":3,"sources":["scripts/app-8d6b19161b.js"],"names":["angular","module","acmeNavbar","NavbarController","moment","vm","this","relativeDate","creationDate","fromNow","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","$inject","webDevTec","getTec","data","title","url","description","logo","service","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","$log","githubContributor","activate","getContributors","then","info","template","link","$http","limit","getContributorsComplete","response","getContributorsFailed","error","toJson","get","apiHost","factory","$q","createMember","formData","deferred","defer","post","success","resolve","reject","promise","loginMember","TodoService","$scope","todos","lists","getTodos","listId","log","createTodo","id","push","deleteTodo","editTodo","updatedItem","item","deleteList","MemberService","AuthenticationService","$location","boards","members","path","setCredentials","BoardService","$rootScope","$cookieStore","memberName","currentUser","name","owner_id","globals","getBoards","createBoard","ListService","$routeParams","list","boardId","boardName","getLists","createList","i","length","_id","splice","$timeout","email","password","callback","res","token","body","defaults","headers","common","put","clearCredentials","console","remove","Authorization","loadAuth","event","next","current","restrictedPage","$","inArray","loggedIn","runBlock","debug","run","routeConfig","$routeProvider","when","otherwise","redirectTo","config","constant","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache"],"mappings":"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","file":"scripts/app-8d6b19161b.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('mytodo', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngResource', 'ngRoute', 'ui.bootstrap', 'toastr', 'ui.sortable']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment) {\n      var vm = this;\n\n      // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('mytodo')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\nangular\n  .module('mytodo')\n  .factory('MemberService', ['$http','$q', function ($http, $q) {\n    var service = {};\n\n    service.createMember = function (formData) {\n      var deferred = $q.defer();\n      $http.post('/api/members/signup', formData)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    service.loginMember = function (formData) {\n      var deferred = $q.defer();\n      $http.post('/api/members/login', formData)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    // service.createBoard = function (formData) {\n    //   var deferred = $q.defer();\n    //   $http.post('/api/boards', formData)\n    //     .success(function (data) {\n    //       deferred.resolve(data);\n    //     })\n    //     .error(function (data) {\n    //       deferred.reject('Error: ', data);\n    //     });\n    //     return deferred.promise;\n    // };\n    return service;\n  }]);\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .controller('TodoController', ['TodoService', '$log', '$scope', function (TodoService, $log, $scope) {\n      var vm = this;\n      vm.todos = [];\n      vm.lists = [];\n      vm.formData = {};\n      // vm.listId = $routeParams.listId;\n      // vm.listName = $routeParams.listName;\n      // vm.listDescription = $routeParams.listDescription;\n\n      //Get Todos\n      vm.getTodos = function (listId) {\n        TodoService.getTodos(listId)\n          .then(function (data) {\n            vm.todos = data;\n          })\n          .catch(function (data) {\n            $log.log(data);\n          });\n      };\n\n      //Create Todo\n      vm.createTodo = function (id) {\n        vm.formData.listId = id;\n        TodoService.createTodo(vm.formData)\n          .then(function (data) {\n            vm.todos.push(data);\n            vm.formData = {};\n          })\n          .catch(function (data) {\n            $log.log(data);\n          });\n      };\n\n      //Delete Todos\n      vm.deleteTodo = function (id) {\n        $http.post('/api/delete/' + id, {listId: vm.listId})\n          .success(function (data) {\n            vm.todos = data;\n          })\n          .catch(function (data) {\n            $log.log(data);\n          });\n      };\n\n      //Edit Todos\n      vm.editTodo = function (id, updatedItem) {\n        $http.post('/api/edit/' + id, {item: updatedItem, listId: vm.listId})\n          .success(function (data) {\n            vm.todos = data;\n          })\n          .catch(function (data) {\n            $log.log(data);\n          });\n      };\n\n    }]);\n\n})();\n\n(function() {\n  'use strict';\n\nangular\n  .module('mytodo')\n  .factory('TodoService', ['$http','$q', function ($http, $q) {\n    var service = {};\n\n    // service.getLists = function (boardId) {\n    //   var deferred = $q.defer();\n    //   $http.get('/api/lists?boardId='+ boardId)\n    //     .success(function (data) {\n    //       deferred.resolve(data);\n    //     })\n    //     .error(function (data) {\n    //       deferred.reject('Error: ', data);\n    //     });\n    //     return deferred.promise;\n    // };\n\n    service.getTodos = function (listId) {\n      var deferred = $q.defer();\n      $http.get('/api/todos?listId=' + listId)\n        .success( function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    service.createTodo = function (formData) {\n      var deferred = $q.defer();\n      $http.post('/api/todos', formData)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    service.deleteList = function (id) {\n      var deferred = $q.defer();\n      $http.post('/api/delete/list/' + id)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    return service;\n  }]);\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .controller('MemberController', ['MemberService', 'AuthenticationService', '$log', '$location', function (MemberService, AuthenticationService, $log, $location) {\n      var vm = this;\n      vm.boards = [];\n      vm.members = {};\n      vm.formData = {};\n\n    //Create Member\n    vm.createMember = function () {\n      MemberService.createMember(vm.formData)\n        .then(function (data) {\n          $location.path('/memberlogin');\n        })\n        .catch(function (data) {\n          $log.error(data);\n        });\n    };\n\n    //Login Member\n    vm.loginMember = function () {\n      MemberService.loginMember(vm.formData)\n        .then(function (data) {\n          AuthenticationService.setCredentials(data);\n          $location.path('/boards/');\n        })\n        .catch(function (data) {\n          $log.error(data);\n        });\n    };\n\n      //Show Boards\n      // BoardService.getBoards()\n      //   .then(function (data) {\n      //     vm.boards = data;\n      //   })\n      //   .catch(function (data) {\n      //     $log.error(data);\n      //   });\n\n      // //Create Board\n      // vm.createBoard = function () {\n      //   BoardService.createBoard(vm.formData)\n      //     .then(function (data){\n      //       vm.boards.push(data);\n      //       vm.formData = {};\n      //     })\n      // };\n\n      // //Delete Lists\n      // vm.deleteList = function (id) {\n      //   $http.post('/api/delete/lists/' + id)\n      //     .success(function (data) {\n      //       vm.lists = data;\n      //     })\n      //     .error(function (data) {\n      //       $log.error(data);\n      //     });\n      // };\n\n      // //Edit Lists\n      // vm.editList = function (id, updatedItem) {\n      //   $http.post('/api/edit/lists/' + id, {name: updatedItem})\n      //     .success(function (data) {\n      //       vm.lists = data;\n      //     })\n      //     .error(function (data) {\n      //       $log.error(data);\n      //     });\n      // };\n    }]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .controller('MainController', ['BoardService', '$log','$rootScope', '$cookieStore', function (BoardService, $log, $rootScope, $cookieStore) {\n      var vm = this;\n      vm.todos = [];\n      vm.lists = [];\n      vm.boards = [];\n      vm.members = {};\n      vm.formData = {};\n      vm.memberName = $cookieStore.get('globals').currentUser.name;\n      vm.owner_id = $rootScope.globals.currentUser.id;\n\n      //Show Boards\n      BoardService.getBoards()\n        .then(function (data) {\n          vm.boards = data;\n\n        })\n        .catch(function (data) {\n          $log.error(data);\n        });\n\n      //Create Board\n      vm.createBoard = function () {\n        vm.formData.owner_id = vm.owner_id;\n        BoardService.createBoard(vm.formData)\n          .then(function (data){\n            vm.boards.push(data);\n            vm.formData = {};\n          })\n      };\n\n      // //Delete Lists\n      // vm.deleteList = function (id) {\n      //   $http.post('/api/delete/lists/' + id)\n      //     .success(function (data) {\n      //       vm.lists = data;\n      //     })\n      //     .error(function (data) {\n      //       $log.error(data);\n      //     });\n      // };\n\n      // //Edit Lists\n      // vm.editList = function (id, updatedItem) {\n      //   $http.post('/api/edit/lists/' + id, {name: updatedItem})\n      //     .success(function (data) {\n      //       vm.lists = data;\n      //     })\n      //     .error(function (data) {\n      //       $log.error(data);\n      //     });\n      // };\n    }]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .controller('ListController', ['ListService', 'TodoService', '$log', '$routeParams', '$rootScope', '$cookieStore', function (ListService, TodoService, $log, $routeParams, $rootScope, $cookieStore) {\n      var vm = this;\n      vm.todos = [];\n      vm.lists = [];\n      vm.formData = {};\n      vm.listId = vm.list;\n      vm.boardId = $routeParams.boardId;\n      vm.boardName = $routeParams.boardName;\n      vm.memberName = $cookieStore.get('globals').currentUser.name;\n\n      //Show Lists\n      ListService.getLists(vm.boardId)\n        .then(function (data) {\n          vm.lists = data;\n        })\n        .catch(function (data) {\n          $log.log(data);\n        });\n\n      //Create Lists\n      vm.createList = function () {\n        vm.formData.boardId = vm.boardId;\n        ListService.createList(vm.formData)\n          .then(function (data) {\n            vm.lists.push(data);\n            vm.formData = {};\n          })\n          .catch(function (data) {\n            $log.log(data);\n          });\n      };\n\n      //Delete Lists\n      vm.deleteList = function (id) {\n        ListService.deleteList(id)\n          .then(function (data) {\n            for (var i = 0; i < vm.lists.length; i++) {\n              if (vm.lists[i]._id == data._id) {\n                vm.lists.splice(i, 1);\n                break;\n              }\n            }\n          })\n          .catch(function (data) {\n            $log.log('Error: ' + data);\n          });\n      };\n\n      //Edit Lists\n      // $scope.editList = function (id, updatedItem) {\n      //   $http.post('/api/edit/lists/' + id, {name: updatedItem})\n      //     .success(function (data) {\n      //       $scope.lists = data;\n      //     })\n      //     .error(function (data) {\n      //       console.log('Error: ' + data);\n      //     });\n      // };\n    }]);\n\n})();\n\n(function() {\n  'use strict';\n\nangular\n  .module('mytodo')\n  .factory('ListService', ['$http','$q', function ($http, $q) {\n    var service = {};\n\n    service.getLists = function (boardId) {\n      var deferred = $q.defer();\n      $http.get('/api/lists?boardId='+ boardId)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    service.createList = function (formData) {\n      var deferred = $q.defer();\n      $http.post('/api/lists', formData)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    service.deleteList = function (id) {\n      var deferred = $q.defer();\n      $http.post('/api/delete/list/' + id)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    return service;\n  }]);\n})();\n(function() {\n  'use strict';\n\nangular\n  .module('mytodo')\n  .factory('BoardService', ['$http','$q','$rootScope', '$cookieStore', function ($http, $q, $rootScope, $cookieStore) {\n    var service = {};\n    var currentUser = $cookieStore.get('globals').currentUser;\n\n    service.getBoards = function () {\n      var deferred = $q.defer();\n      var owner_id = currentUser.id;\n      $http.get('/api/boards/'+ owner_id)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n\n    service.createBoard = function (formData) {\n      var deferred = $q.defer();\n      var owner_id = currentUser.id;\n      $http.post('/api/boards', formData)\n        .success(function (data) {\n          deferred.resolve(data);\n        })\n        .error(function (data) {\n          deferred.reject('Error: ', data);\n        });\n        return deferred.promise;\n    };\n    return service;\n  }]);\n})();\n(function () {\n  'use strict';\n\n  angular\n      .module('mytodo')\n      .factory('AuthenticationService', AuthenticationService);\n\n  AuthenticationService.$inject = ['$http', '$cookieStore', '$rootScope', '$timeout'];\n  function AuthenticationService($http, $cookieStore, $rootScope, $timeout) {\n    var service = {};\n\n    service.login = login;\n    service.setCredentials = setCredentials;\n    service.clearCredentials = clearCredentials;\n\n    return service;\n\n    // Use the email and password to login. The Callback will receive and object with the username and token\n    function login(email, password, callback) {\n\n      $http.post('/authenticate', { email: email, password: password })\n         .success(function (res) {\n             callback({ name: name, id: id, token: res.body.token });\n         });\n\n    }\n\n    // Store credentials for reuse. They are stored in $rootScope for the current app session.\n    // Stored in the $cookieStore for use if the app is reloaded\n    function setCredentials(data) {\n      $rootScope.globals = {\n        currentUser: {\n          email: data.email,\n          name: data.name,\n          id: data.id,\n          token: data.token\n        }\n      };\n\n      $http.defaults.headers.common['X-ACCESS-TOKEN'] = data.token;\n      $cookieStore.put('globals', $rootScope.globals);\n    }\n\n    // Cleanup the stored credentials\n    function clearCredentials() {\n      console.log('clear creds');\n      $rootScope.globals = {};\n      $cookieStore.remove('globals');\n      $http.defaults.headers.common.Authorization = 'Basic';\n    }\n  }\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .run(loadAuth)\n    .run(runBlock);\n\n  loadAuth.$inject = ['$rootScope', '$location', '$cookieStore', '$http'];\n  function loadAuth($rootScope, $location, $cookieStore, $http) {\n    $rootScope.globals = $cookieStore.get('globals') || {};\n    if ($rootScope.globals.currentUser) {\n      $http.defaults.headers.common['X-ACCESS-TOKEN'] = $rootScope.globals.currentUser.token;\n    }\n\n    $rootScope.$on('$locationChangeStart', function (event, next, current) {\n      var restrictedPage = $.inArray($location.path(), ['/', '/memberlogin', '/membersignup']) === -1;\n      var loggedIn = $rootScope.globals.currentUser;\n      if (restrictedPage && !loggedIn) {\n        $location.path('/');\n      }\n    });\n  }\n\n  /** @ngInject */\n  function runBlock($log) {\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/index/index.html',\n        controller: 'MemberController',\n        controllerAs: 'member'\n      })\n      .when('/memberlogin', {\n        templateUrl: 'app/member/memberlogin.html',\n        controller: 'MemberController',\n        controllerAs: 'member'\n      })\n      .when('/membersignup', {\n        templateUrl: 'app/member/membersignup.html',\n        controller: 'MemberController',\n        controllerAs: 'member'\n      })\n      .when('/boards', {\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      })\n      .when('/todos', {\n        templateUrl:'app/todos/todos.html',\n        controller: 'TodoController',\n        controllerAs: 'todos'\n      })\n      .when('/lists', {\n        templateUrl: 'app/lists/list.html',\n        controller: 'ListController',\n        controllerAs: 'lists'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('mytodo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"mytodo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/index/index.html\",\"<nav class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Get\\'er Done!</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"#/boards\\\">Boards <span class=\\\"sr-only\\\"></span></a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#/memberlogin\\\">Sign In</a></li><li><a href=\\\"#/membersignup\\\">Sign Up</a></li></ul></div></div></nav><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12 text-center\\\"><h1>Get\\'er Done!</h1><p class=\\\"lead\\\">Your ultimate stop for managing multiple ToDo lists!!!</p></div></div></div>\");\n$templateCache.put(\"app/lists/list.html\",\"<div class=\\\"container\\\"><nav class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Get\\'er Done!</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav\\\"><li><a href=\\\"#/boards\\\">Boards <span class=\\\"sr-only\\\"></span></a></li></ul><div class=\\\"userprofile\\\" ng-model=\\\"main\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\"><a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{lists.memberName}} <span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li><a href=\\\"#/memberlogout\\\">Log Out</a></li></ul></li></ul></div></div></div></nav><div class=\\\"row\\\"><div class=\\\"col-md-12\\\"><h2 class=\\\"boards\\\">{{lists.boardName}}</h2></div></div><div class=\\\"row\\\"><div ui-sortable=\\\"\\\" ng-model=\\\"lists\\\" ng-repeat=\\\"list in lists.lists\\\"><div class=\\\"col-md-3 lists\\\"><div class=\\\"input-group\\\" style=\\\"cursor: move\\\"><span style=\\\"padding-right: 1em\\\">{{list.name}}</span> <span aria-hidden=\\\"true\\\"><button class=\\\"btn btn-danger glyphicon glyphicon-remove-sign\\\" ng-click=\\\"lists.deleteList(list._id)\\\"></button></span><div ng-controller=\\\"TodoController as todos\\\"><div ng-init=\\\"todos.getTodos(list._id)\\\"><div class=\\\"todo-items row\\\" ng-repeat=\\\"item in todos.todos\\\"><div class=\\\"col-xs-6 col-xs-offset-2\\\">{{item.item}}</div><div class=\\\"col-xs-2\\\" aria-hidden=\\\"true\\\"><button class=\\\"btn btn-danger glyphicon glyphicon-remove-sign\\\" ng-click=\\\"todos.deleteTodo(item._id)\\\"></button></div></div></div><p><form role=\\\"form\\\" ng-submit=\\\"todos.createTodo(list._id)\\\"><div class=\\\"input_group\\\"><input type=\\\"text\\\" ng-model=\\\"todos.formData.item\\\" placeholder=\\\"Add Todo\\\" class=\\\"form-control\\\"> <span class=\\\"input-group-btn\\\"><input type=\\\"submit\\\" class=\\\"btn btn-info glyphicon glyphicon-plus\\\"></span></div></form></p></div></div></div></div></div><h3>Create A Todo List</h3><div class=\\\"row\\\"><div class=\\\"col-md-6.text-center make-list\\\"><form role=\\\"form\\\" ng-submit=\\\"lists.createList()\\\"><div class=\\\"row\\\"><div class=\\\"input-group\\\"><input type=\\\"text\\\" ng-model=\\\"lists.formData.name\\\" placeholder=\\\"Todo List Name\\\" class=\\\"form-control\\\"> <span class=\\\"input-group-btn\\\"><input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Add\\\"></span></div></div></form></div></div><div class=\\\"modal fade\\\" id=\\\"addTodo\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addTodo\\\" aria-hidden=\\\"true\\\"><div class=\\\"modal-dialog\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span aria-hidden=\\\"true\\\">&times;</span> <span class=\\\"sr-only\\\">Close</span></button><h4 class=\\\"modal-title\\\">Add a ToDo Item</h4></div><div class=\\\"modal-body\\\"><form class=\\\"form-horizontal\\\" role=\\\"form\\\"><div class=\\\"form-group\\\"><label class=\\\"col-sm-2 control-label\\\" for=\\\"todo\\\">Todo</label><div class=\\\"col-sm-10\\\"><input type=\\\"text\\\" ng-model=\\\"formData.item\\\" class=\\\"form-control\\\" id=\\\"todo\\\" placeholder=\\\"Todo\\\"></div></div><div class=\\\"form-group\\\"><div class=\\\"col-sm-offset-2 col-sm-10\\\"><button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Add</button></div></div></form></div></div></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container\\\"><nav class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Get\\'er Done!</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav\\\"><li class=\\\"active\\\"><a href=\\\"#/\\\">Boards <span class=\\\"sr-only\\\">(current)</span></a></li></ul><div class=\\\"userprofile\\\" ng-model=\\\"main\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\"><a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{main.memberName}}<span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li><a href=\\\"#/memberlogout\\\">Log Out</a></li></ul></li></ul></div></div></div></nav><h3 class=\\\"boards\\\">My Boards</h3><div class=\\\"row\\\"><div class=\\\"boards-page\\\"><div ng-model=\\\"main\\\" ng-repeat=\\\"board in main.boards\\\"><a class=\\\"box\\\" href=\\\"#/lists?boardId={{board._id}}&boardName={{board.name}}\\\"><div class=\\\"open-board\\\"><span class=\\\"fade\\\"></span> <span class=\\\"board-list-name\\\">{{board.name}}</span></div></a></div></div></div><h3 class=\\\"boards\\\">Create A New Board</h3><div class=\\\"row\\\"><div class=\\\"col-md-6.text-center make-board\\\"><form role=\\\"form\\\" ng-submit=\\\"main.createBoard()\\\"><div class=\\\"row\\\"><div class=\\\"input-group\\\"><input type=\\\"text\\\" ng-model=\\\"main.formData.name\\\" placeholder=\\\"Board Name\\\" class=\\\"form-control\\\"> <span class=\\\"input-group-btn\\\"><input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Create\\\"></span></div></div></form></div></div></div>\");\n$templateCache.put(\"app/member/memberlogin.html\",\"<nav class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Get\\'er Done!</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav\\\"><li class=\\\"active\\\"><a href=\\\"#/\\\">Boards <span class=\\\"sr-only\\\">(current)</span></a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\"><a href=\\\"#/\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">User Profile <span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li><a href=\\\"#/memberlogin\\\">Sign In</a></li><li><a href=\\\"#/membersignup\\\">Sign Up</a></li><li role=\\\"separator\\\" class=\\\"divider\\\"></li><li><a href=\\\"#/memberlogout\\\">Log Out</a></li></ul></li></ul></div></div></nav><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12 text-center\\\"><div id=\\\"header\\\"><h2>Login</h2></div><div class=\\\"newuserform\\\"><form role=\\\"form\\\" ng-submit=\\\"member.loginMember()\\\"><div class=\\\"form-group\\\"><label for=\\\"email\\\">Email</label> <input id=\\\"email\\\" type=\\\"email\\\" ng-model=\\\"member.formData.email\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" class=\\\"form-control\\\"></div><div class=\\\"form-group\\\"><label for=\\\"Password\\\">Password</label> <input id=\\\"password\\\" type=\\\"password\\\" ng-model=\\\"member.formData.password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" class=\\\"form-control\\\"> <button id=\\\"user-submit\\\" class=\\\"btn btn-default\\\">Submit</button></div></form></div></div></div></div>\");\n$templateCache.put(\"app/member/memberlogout.html\",\"\");\n$templateCache.put(\"app/member/membersignup.html\",\"<nav class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Get\\'er Done!</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav\\\"><li class=\\\"active\\\"><a href=\\\"#/\\\">Boards <span class=\\\"sr-only\\\">(current)</span></a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\"><a href=\\\"#/\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">User Profile <span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li><a href=\\\"#/memberlogin\\\">Sign In</a></li><li><a href=\\\"#/membersignup\\\">Sign Up</a></li><li role=\\\"separator\\\" class=\\\"divider\\\"></li><li><a href=\\\"#/memberlogout\\\">Log Out</a></li></ul></li></ul></div></div></nav><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12 text-center\\\"><div id=\\\"header\\\"><h2>Create an Account</h2></div><div class=\\\"newuserform\\\"><form role=\\\"form\\\" ng-submit=\\\"member.createMember()\\\"><div class=\\\"form-group\\\"><label for=\\\"Username\\\">Username</label> <input id=\\\"name\\\" type=\\\"name\\\" ng-model=\\\"member.formData.name\\\" placeholder=\\\"Enter username\\\" name=\\\"name\\\" class=\\\"form-control\\\"></div><div class=\\\"form-group\\\"><label for=\\\"Password\\\">Password</label> <input id=\\\"password\\\" type=\\\"password\\\" ng-model=\\\"member.formData.password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" class=\\\"form-control\\\"></div><div class=\\\"form-group\\\"><label for=\\\"Email\\\">Email</label> <input id=\\\"email\\\" type=\\\"email\\\" ng-model=\\\"member.formData.email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" class=\\\"form-control\\\"> <button id=\\\"info-submit\\\" class=\\\"btn btn-default\\\">Submit</button></div></form></div></div></div></div>\");\n$templateCache.put(\"app/todos/todos.html\",\"<div class=\\\"container\\\"><nav class=\\\"navbar navbar-default\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#/\\\">Get\\'er Done!</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav\\\"><li class=\\\"active\\\"><a href=\\\"#/\\\">Boards <span class=\\\"sr-only\\\"></span></a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\"><a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">User Profile <span class=\\\"caret\\\"></span></a><ul class=\\\"dropdown-menu\\\"><li><a href=\\\"#\\\">Action</a></li><li><a href=\\\"#\\\">Another action</a></li><li><a href=\\\"#\\\">Something else here</a></li><li role=\\\"separator\\\" class=\\\"divider\\\"></li><li><a href=\\\"#\\\">Separated link</a></li></ul></li></ul></div></div></nav><div class=\\\"row\\\"><h2>{{listName}}</h2><h4>{{listDescription}}</h4></div><div ui-sortable=\\\"\\\" ng-model=\\\"todos\\\"><p class=\\\"input-group\\\" ng-repeat=\\\"todo in todos\\\" style=\\\"padding:5px 10px; cursor: move;\\\"><input type=\\\"text\\\" ng-model=\\\"todo.item\\\" class=\\\"form-control\\\"> <span class=\\\"input-group-btn\\\" aria-hidden=\\\"true\\\"><button class=\\\"btn btn-default glyphicon glyphicon-pencil\\\" ng-click=\\\"editTodo(todo._id, todo.item)\\\"></button></span> <span class=\\\"input-group-btn\\\" aria-hidden=\\\"true\\\"><button class=\\\"btn btn-danger glyphicon glyphicon-remove-sign\\\" ng-click=\\\"deleteTodo(todo._id)\\\"></button></span></p></div><h3>Add A Todo Item</h3><div class=\\\"row\\\"><div class=\\\"col-md-6.text-center make-list\\\"><form role=\\\"form\\\" ng-submit=\\\"createTodo(list._id)\\\"><div class=\\\"row\\\"><div class=\\\"input-group\\\"><input type=\\\"text\\\" ng-model=\\\"formData.name\\\" placeholder=\\\"Todo Name...\\\" class=\\\"form-control\\\"> <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Add\\\"></div></div></form></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\" href=\\\"https://github.com/Swiip/generator-gulp-angular\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span> Gulp Angular</a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-6\\\"><ul class=\\\"nav navbar-nav\\\"><li class=\\\"active\\\"><a ng-href=\\\"#\\\">Home</a></li><li><a ng-href=\\\"#\\\">About</a></li><li><a ng-href=\\\"#\\\">Contact</a></li></ul><ul class=\\\"nav navbar-nav navbar-right acme-navbar-text\\\"><li>Application was created {{ vm.relativeDate }}.</li></ul></div></div></nav>\");}]);"],"sourceRoot":"/source/"}